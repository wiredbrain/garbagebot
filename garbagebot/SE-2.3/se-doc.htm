<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./SE-DOC_files/filelist.xml">
<title>S E</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>default</o:Author>
  <o:LastAuthor>default</o:LastAuthor>
  <o:Revision>10</o:Revision>
  <o:TotalTime>12253</o:TotalTime>
  <o:Created>2006-05-31T11:52:00Z</o:Created>
  <o:LastSaved>2006-10-13T15:11:00Z</o:LastSaved>
  <o:Pages>34</o:Pages>
  <o:Words>10398</o:Words>
  <o:Characters>59274</o:Characters>
  <o:Lines>493</o:Lines>
  <o:Paragraphs>118</o:Paragraphs>
  <o:CharactersWithSpaces>72792</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DoNotHyphenateCaps/>
  <w:PunctuationKerning/>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:13.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	line-height:150%;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:"Times New Roman";
	mso-font-kerning:0pt;
	font-weight:normal;}
h2
	{mso-style-next:Normal;
	margin:0cm;
	margin-bottom:.0001pt;
	line-height:110%;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:13.0pt;
	font-family:"Times New Roman";
	font-weight:normal;
	font-style:italic;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	line-height:110%;
	mso-pagination:widow-orphan;
	font-size:24.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{margin:0cm;
	margin-bottom:.0001pt;
	line-height:110%;
	mso-pagination:widow-orphan;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:9.0pt;
	margin-bottom:.0001pt;
	line-height:110%;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	line-height:110%;
	mso-pagination:widow-orphan;
	font-size:22.0pt;
	mso-bidi-font-size:28.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
@page Section1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;
	mso-header-margin:36.0pt;
	mso-footer-margin:36.0pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:36.0pt'>

<div class=Section1>

<p class=MsoTitle><span style='font-size:48.0pt;mso-bidi-font-size:72.0pt'>S E<o:p></o:p></span></p>

<p class=MsoSubtitle><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoSubtitle style='line-height:150%'><span style='font-size:16.0pt;
mso-bidi-font-size:28.0pt'>A Python Stream Editor<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;line-height:150%'><span
style='font-size:16.0pt'>by<o:p></o:p></span></p>

<h1>Frederic Rentsch</h1>

<p class=MsoNormal style='line-height:150%'><span style='font-size:16.0pt'><span
style="mso-spacerun: yes"> </span><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;line-height:150%'><span
style='font-size:12.0pt;mso-bidi-font-size:16.0pt'>Version 2.3<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;line-height:150%'><span
style='font-size:12.0pt;mso-bidi-font-size:16.0pt'>© 2006 <o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;line-height:150%'><span
style='font-size:12.0pt;mso-bidi-font-size:16.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;line-height:110%'><span
style='font-size:16.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center;line-height:110%'><span
style='font-size:36.0pt;mso-bidi-font-size:16.0pt'>*<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes"> 
</span></p>

<span style='font-size:13.0pt;font-family:"Times New Roman";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><a href="#X_1_">1. SE—the Stream Editor</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><a href="#X_2_">2. Substitution Definitions</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_2_1_">2.1. The SE Object</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">  
</span><span style="mso-spacerun: yes">     </span><a href="#X_2_2_">2.2.
Defining Substitutions</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_2_2_1_">2.2.1. Search and Replace</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_2_2_2_">2.2.2. Deletion</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_2_2_3_">2.2.3. Regular Expression Targets</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_2_2_4_">2.2.4. Replacing Something with the
Contents of a File</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_2_3_">2.3. Substitution Sets</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_2_4_">2.4. Notation</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_2_4_1_">2.4.1. The ASCII Notation</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_2_4_2_">2.4.2. Handling Space Inside
Definitions</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_2_4_3_">2.4.3. Target Repeat</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_2_4_4_">2.4.4. Special Characters</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><a href="#X_3_">3. Working with Definition Sets</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_3_1_">3.1. Substitution Precedence</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_3_2_">3.2. Definition Files</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_3_3_">3.3. Merging Substitution Sets</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><span style="mso-spacerun: yes">    </span><a href="#X_3_4_">3.4.
Redefinitions</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_3_4_1_">3.4.1. Exception</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_3_4_2_">3.4.2. Target Lock</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_3_5_">3.5. Filters (A short and well-known
story with a happy ending)</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_3_5_1_">3.5.1. Filtering by Deletion</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_3_5_2_">3.5.2. Filtering by Extraction</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_3_5_3_">3.5.3. Null-Edit Modes: PASS and
EAT</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_3_6_">3.6. Multiple-Pass Runs</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_3_6_1_">3.6.1 Cascading Runs</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_3_6_2_">3.6.2. Nesting Calls</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_3_7_">3.7. Setting Marks</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_3_7_1_">3.7.1. Temporary Runtime Marks</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_3_7_2_">3.7.2. Split Marks</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_3_8_">3.8 Dynamic Targeting</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><a href="#X_4_">4. Working with SE Objects</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_4_1_">4.1. The SE Object</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_4_1_1_">4.1.1. Maximum Target Length</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_4_1_2_">4.1.2. Data Paths</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_4_1_3_">4.1.3. Protecting and Altering
Existing Files</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">     </span><span style="mso-spacerun: yes">       </span><a
href="#X_4_1_4_">4.1.4. Backup File Extension</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_4_1_5_">4.1.5. Intermediate Data</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_4_1_6_">4.1.6. Clipping the Cascade Display</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_4_1_7_">4.1.7. Saving an Editor's
Definitions</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_4_2_">4.2. The Translator Object</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_4_3_">4.3. Editing a Translator Interactively</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_4_3_1_">4.3.1. Adding Definitions</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><span style="mso-spacerun: yes">        </span><a href="#X_4_3_2_">4.3.2.
Deleting Definitions</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_4_3_3_">4.3.3. Reversing a Translator</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><a href="#X_5_">5. Input, Output</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_5_1_">5.1. Input Types and Output Options</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_5_1_1_">5.1.1. Input: String</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_5_1_2_">5.1.2. Input: File Name</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_5_1_3_">5.1.3. Input: File Object</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><a href="#X_6_">6. The Message Log</a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><a href="#X_7_">7. SE Light</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_7_1_">7.1. Type Casting Back and Forth</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><a href="#X_8_">8. Some Examples</a> </p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_8_1_">8.1. Programming</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_8_1_1_">8.1.1. Revising Names</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_8_1_2_">8.1.2. Deleting Tracing Statements</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_8_1_3_">8.1.3. Listing Names of Classes,
Functions, Methods, Imports, Globals ...</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_8_2_">8.2. HTM</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_8_2_1_">8.2.1. A Link Extractor</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_8_2_2_">8.2.2. A Tag Stripper</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_8_3_">8.3. Expanding</a> </p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_8_3_1_">8.3.1. A Two-Pass Expanding Editor</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">            </span><a href="#X_8_3_2_">8.3.2. Combining two One-Pass
Editors</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_8_4_">8.4. Siphoning (Reasonably) Current Stock
Quotes from an Internet Site</a> </p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_8_5_">8.5. Two-Step Conversions through a
Generic Format</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">        </span><a href="#X_8_6_">8.6. A Day in the Life of a Stenographer</a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">   
</span><a href="#X_9_">9. Closing Remarks</a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_1_"><span
style='font-size:18.0pt'>1. SE—the Stream Editor</span></a><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>We are all familiar with the search-and-replace
function of a text editor. Search and replace is what <i>SE</i> does. But
unlike text editors, it can do an arbitrary number of different replacements in
one pass and it is designed to integrate into Python programs.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">       </span><i>SE</i> stands for <i>Stream Editor</i>. It handles all
256 octets. It does any (practical) number of substitutions in one pass. It can
do any (practical) number of consecutive passes. It is simple and intuitive for
both quick hacks and production applications.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Its simplicity is the result of keeping all
programming-language constructs out of the interface, having one single Editor
object with no operational methods and no function library to memorize. <i>SE</i>
is all about strings. It processes strings and a string—the simplest data structure
there is—is the argument of the Editor’s constructor. The simplicity of the
design translates to extremely concise code whether in a program or on the
command line, and also translates to a high degree of building-block type
modularity in combining both translation definition files when constructing
Editor objects and combining<span style="mso-spacerun: yes">  </span>Editor
objects at run time.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Considering that searching and replacing is all the module
does, its paucity of functions may not convey the impression of much
capability. The impression misses the point because we tend to associate
capability with massive arsenals of objects, methods and functions. <i>SE</i>
is an enabling tool that offers instant solutions to a host of relatively
simple yet annoying problems inhabiting the vacuum just beyond basic language
functionality and beneath the specialized high-power functionality of
production tools. Its power lies in a surprising range of application <i>techniques</i>
that are intuitively obvious as well as trivial to express, even if combined to
considerable functional complexity. </p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>This manual discusses the most important of these techniques.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_"><span
style='font-size:18.0pt'>2. Substitution Definitions</span></a><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_1_"><span
style='font-size:15.0pt'>2.1. The SE Object</span></a><span style='mso-bookmark:
X_2_1_'></span><span style='font-size:14.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; import SE<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object =
SE.SE (substitute_definitions)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; output =
SE_Object (input, [output])<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The definitions, input and output
all may be either strings or files. Type identification is automatic. Strings
are ideal for quick fixes or interactive development. Files are ideal for production.
The details of IO typing is covered in chapter <a href="#X_5_">5.</a> </p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Terminology: The <i>SE object</i>
is also referred to as <i>Editor.</i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_2_"><span
style='font-size:15.0pt'>2.2. Defining Substitutions</span></a><span
style='font-size:15.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_2_1_"><i>2.2.1. Search
and Replace</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>A <i>substitution definition</i>
states a <i>target</i> and a <i>substitute,</i> the two separated by an equal
sign: <i>old=new.</i> If the target is found in an input stream the substitute
is written to the output stream. In between matching targets the input stream
gets copied as is to the output stream. </p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Old_New = SE.SE
('old=new')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Old_New
(&quot;If 'old' reads 'new' we know it works.&quot;)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;If 'new' reads 'new'
we know it works.&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_2_2_"><i>2.2.2.
Deletion</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Replacing a target with nothing
amounts to a deletion:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('HORROR=')('This &gt;HORROR&lt; must be deleted!')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'This &gt;&lt; must be deleted!'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_2_3_"></a><i>2.2.3.
Regular Expression Targets</i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>If a target is placed between
tildes <i>('~')</i> it is compiled as a regular expression.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Hide_Account_Number = SE.SE ('~123-45678-[0-3][012ABF]?~=***')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Hide_Account_Number ('Client: 123-45678, Account Numbers: 123-45678-00,
123-45678-01 and 123-45678-0B')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'Client: 123-45678, Account
Numbers: ***, *** and ***'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>A couple of points to be aware of
when using regular expressions are covered in the last paragraph of chapter (<a
href="#X_3_1_A_">3.1 (a)</a>, <a href="#X_3_1_B_">3.1. (b)</a>)</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Terminology: a target that is not a
regular expression is referred to as a <i>fixed target.</i> It is part of as a <i>fixed
definition</i>.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes">  
</span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_2_4_"></a><i>2.2.4.
Replacing Something with the Contents of a File</i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>A substitute can be the contents of
a file. To differentiate a file name from a literal substitute, the file name
is placed in angled brackets.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Letter = SE.SE
('LETTERHEAD=&lt;correspondence/private/letterhead.1&gt;
INTRO=&lt;correspondence/confirm_date&gt; BYE=&lt;correspondence/bye_bye&gt;')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; print Letter
('LETTERHEAD\n\nINTRO\n\n\nSounds good. Looking forward.\n\nBYE')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>(... mail-merged letter ...)
<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<span style='font-size:15.0pt;font-family:"Times New Roman";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:110%'><a name="X_2_3_"><span
style='font-size:15.0pt'>2.3. Substitution Sets</span></a><span
style='font-size:15.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The first three of the previous
examples use single definitions. The last one states three. An arbitrary number
of definitions can be stated in a single string with white space between them.
They constitute a <i>substitution set.</i> The definitions can be written in
any order. A substitution run processes the entire set.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Nicer = SE.SE
('cop=officer joker=person chickenshit=triviality guy=gentleman yell=smile')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Nicer ('The guy
yelled at the cop: What kind of a joker are you anyway to bother with such
chickenshit?')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'The gentleman smiled at the
officer: What kind of a person are you anyway to bother with such triviality?'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_4_"><span
style='font-size:15.0pt'>2.4. Notation</span></a><span style='font-size:15.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_4_1_"><i>2.4.1. The
ASCII Notation</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><i>SE</i> operates on streams of
bytes each of which can have a value between 0 and 255. Most byte values
associate with a typable character by some standard. Typing a character into a
definition inserts that character's ascii code.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>So typable characters represent themselves. But a few
characters have a special meaning (<a href="#X_2_4_4_">2.4.4.</a>). The equal
sign, for instance, separates the target from the substitute. Or white-space
characters separate one definition from the next. If one of the special
characters forms part of either a target or a substitute, it cannot be typed
per se. Some byte values, again, don't have typable characters assigned. There
needs to be a means to write these untypable values into a definition, this:
all octets can be written as parenthesized ascii codes: <i>(0)</i> to <i>(255)</i>
or hex <i>(x0)</i> to <i>(xff)<o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Unix2Windows =
SE.SE ('(10)=(13)(10)')<span style="mso-spacerun: yes">             </span>#
Either decimal<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Windows2Unix =
SE.SE ('(xd)(xa)=(xa)')<span style="mso-spacerun: yes">             </span># Or
hex (case-insensitive)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><a
name="X_2_4_1_A_"></a><span style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Line_Unwrap<span style="mso-spacerun: yes">  </span>= SE.SE ('(13)(10)=(32)
(10)=(32)')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h2>Line Unwrap<span style='font-style:normal'> will do both Windows and Unix. <o:p></o:p></span></h2>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Python has its own method for
writing ascii <i>(e.g. \x07)</i> and, in addition, back-slashed letters for the
control characters <i>(\a)</i>. The functional difference is that the Python
notation gets decoded before <i>SE</i> receives it, whereas the <i>SE notation </i>gets
past the Python interpreter unaffected.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>SE notation<span style="mso-spacerun: yes">        
</span>Python notation<span style="mso-spacerun: yes">     </span>Function<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>(7)<span style="mso-spacerun: yes">    </span>(x7)<span
style="mso-spacerun: yes">        </span>'\a'<span style="mso-spacerun: yes">  
</span>'\x07'<span style="mso-spacerun: yes">        </span>bell (alert)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>(8)<span style="mso-spacerun: yes">    </span>(x8)<span
style="mso-spacerun: yes">        </span>'\b'<span style="mso-spacerun: yes">  
</span>'\x08'<span style="mso-spacerun: yes">        </span>back space<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>(12)<span style="mso-spacerun: yes">    </span>(xc)<span
style="mso-spacerun: yes">        </span>'\f'<span style="mso-spacerun: yes">  
</span>'\x0c'<span style="mso-spacerun: yes">        </span>page feed<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>(10)<span style="mso-spacerun: yes">    </span>(xa)<span
style="mso-spacerun: yes">        </span>'\n'<span style="mso-spacerun: yes">  
</span>'\x0a'<span style="mso-spacerun: yes">        </span>line feed<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>(13)<span style="mso-spacerun: yes">    </span>(xd)<span
style="mso-spacerun: yes">        </span>'\r'<span style="mso-spacerun: yes">  
</span>'\x0d'<span style="mso-spacerun: yes">        </span>carriage return<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>(9)<span style="mso-spacerun: yes">    </span>(x9)<span
style="mso-spacerun: yes">        </span>'\t'<span style="mso-spacerun: yes">  
</span>'\x09'<span style="mso-spacerun: yes">        </span>tab<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>(11)<span style="mso-spacerun: yes">    </span>(xb)<span
style="mso-spacerun: yes">        </span>'\v'<span style="mso-spacerun: yes">  
</span>'\x0b'<span style="mso-spacerun: yes">        </span>vertical tab<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>The Python backslash notation is
tricky, because it functions in a minimal mode: If the character following a
backslash is unambiguous the backslash represents itself and stays. If, on the
other hand, an ambiguous character follows, its disambiguation consumes the
backslash. <i>SE ascii</i> is more straighforward and works always (with one
(very rare) exception explained in <a href="#X_2_4_4_A_">2.4.4).</a></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes"> </span><span style="mso-spacerun: yes">     </span>Parenthesized groups
have a different meaning in regular expressions. Consequently <i>SE ascii</i>
cannot be used in regular expressions</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_4_2_"></a><i>2.4.2.
Handling Space inside Definitions</i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Working with texts, a means is needed
that allows typing space characters inside a definition. The ascii format <i>(32)</i>
would work, but is awkward and destroys legibility. Better is to brace the
entire definition in double quotation marks. Note: the entire definition. Not
just one side.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; spaces<span
style="mso-spacerun: yes">   </span>= ' &quot;<span style="mso-spacerun:
yes">          </span>=ten spaces&quot; '<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; spread<span
style="mso-spacerun: yes">   </span>= ' &quot;spread=s p r e a d&quot; '<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; unspread = '
&quot;u n s p r e a d&quot;=unspread '<span style="mso-spacerun: yes"> 
</span># Will not compile as intended. Quote entire definition.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Double quotes span multiple lines:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Addresses =
SE.SE ('''<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;TB=Mr. Tony Blair<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Downing Street 10<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>London<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;GB=Mr. George Bush<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>The White House<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Washington DC<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot; ''')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; print Addresses
('\nGB\nTB')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Mr. George Bush<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>The White House<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Washington DC<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Mr. Tony Blair<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Downing Street 10<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>London<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Newline characters <i>('\n')</i>
and tab <i>('\t')</i> don't look like white space, but they are. (So would be <i>'\v',
'\f'</i> and <i>'\r'</i> if we needed them.)</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object =
SE.SE ('word\tanother_word\nnew_line=whatever')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('word\tanother_word\nnew_line')<span style="mso-spacerun: yes">  </span>#
Doesn’t work as expected<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'word\tanother_word\nwhatever'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The compiler gets a single word <i>word</i>
and doesn't know what to do with it. The same occurs again with the next word <i>another_word</i>.
The words are ignored and the fact recorded in the <i>object’s message log</i>.
(<a href="#X_6_">6.</a>) </p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object =
SE.SE (' &quot;word\tanother_word\nnew_line=whatever&quot; ')<span
style="mso-spacerun: yes">   </span># Quotes work<o:p></o:p></span></p>

<p class=MsoBodyTextIndent>&gt;&gt;&gt; SE_Object = SE.SE ('
word(9)another_word(10)new_line=whatever ')<span style="mso-spacerun: yes"> 
</span># SE ascii works quoted or unquoted</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
C_Block_Comment_Eater = SE.SE (' &quot;~[\n\s]*/\*(.|\n)*?\*/~=&quot; ')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Double-quoting regular expressions
may not be necessary. The habit to quote saves the time finding out.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_4_3_"></a><i>2.4.3.
Target Repeat</i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>The primary function of the equal
sign is that of separating target and substitute. Other equal signs may follow,
but their function changes to that of a place holder for the target.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Double_Space =
SE.SE ('(10)=(10)(10)<span style="mso-spacerun: yes"> 
</span>(13)(10)=(13)(10)(13)(10)')<span style="mso-spacerun: yes">  </span>#
Does both Windows and Unix<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Double_Space =
SE.SE ('(10)===<span style="mso-spacerun: yes">       
</span>(13)(10)===')<span style="mso-spacerun: yes">  </span># Same thing<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">                             </span><span style="mso-spacerun:
yes">   </span>^^<span style="mso-spacerun: yes">                 </span>^^<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>With regular expressions the target
place holder <i>'='</i> is a necessity, because the match is not known in
advance. The following writes the match to the output and adds a newline:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; image_files = '
~([Hh][Tt][Tt][Pp]:)?//([A-Za-z]:)?[A-Za-z_/][A-Za-z_0-9/.]*.[bBJjGg][mMPpIi][pPGgFf]&quot;?~==(10)'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The target place holder <i>'='</i>
combines with other characters:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Long_Lat =
SE.SE ('&quot;New York==: (-73.96, 40.76)&quot; &quot;Tokyo==: (139.77,
35.68)&quot;')<span style="mso-spacerun: yes">   </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Long_Lat ('New
York, Tokyo')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'New York: (-73.96, 40.76),
Tokyo: (139.77, 35.68)'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_4_4_"></a><i>2.4.4.
Special Characters</i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Two characters have a special
meaning:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'='<span
style="mso-spacerun: yes">   </span>(61)<span style="mso-spacerun: yes"> 
</span>(x3d)<span style="mso-spacerun: yes">    </span># <a href="#X_2_2_1_">2.2.1.</a>
Separator between target and substitute. Leftmost position.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'='<span
style="mso-spacerun: yes">   </span>(61)<span style="mso-spacerun: yes"> 
</span>(x3d)<span style="mso-spacerun: yes">    </span># <a href="#X_2_4_3_">2.4.3.</a>
Target place holder anywhere in substitute.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>' '<span
style="mso-spacerun: yes">   </span>(32)<span style="mso-spacerun: yes"> 
</span>(x20)<span style="mso-spacerun: yes">    </span># <a href="#X_2_3_">2.3.</a><span
style="mso-spacerun: yes">   </span>Separator between definitions (also '\t',
'\n' (all c.isspace ()))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>These characters identify the
nature of the character group that follows:</p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'#'<span
style="mso-spacerun: yes">   </span>(35)<span style="mso-spacerun: yes"> 
</span>(x23)<span style="mso-spacerun: yes">    </span>#<span
style="mso-spacerun: yes">        </span>Starts a comment.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'&quot;'<span
style="mso-spacerun: yes">   </span>(34)<span style="mso-spacerun: yes"> 
</span>(x22)<span style="mso-spacerun: yes">    </span># <a href="#X_2_4_2_">2.4.2.</a>
Starts a definition containing spaces. <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'~'<span
style="mso-spacerun: yes">   </span>(47)<span style="mso-spacerun: yes"> 
</span>(x2f)<span style="mso-spacerun: yes">    </span># <a href="#X_2_2_4_">2.2.4.</a>
Starts a regular expression target.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'&lt;'<span
style="mso-spacerun: yes">  </span>(123)<span style="mso-spacerun: yes"> 
</span>(x7b)<span style="mso-spacerun: yes">    </span># <a href="#X_2_2_3_">2.2.3.</a>
Starts a substitution file name.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'('<span
style="mso-spacerun: yes">   </span>(40)<span style="mso-spacerun: yes"> 
</span>(x28)<span style="mso-spacerun: yes">    </span># <a href="#X_2_4_1_">2.4.1.</a>
Starts an ascii notation (only in conjunction with a valid ascii number).<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Special characters meant literally
can always be ascii-ized. This may be cumbersome and illegible. <i>‘(0)’</i>,
for instance, compiles to <i>ascii 0.</i> Meant verbatim the following
expression would work: <i>‘(40)0)’.</i><span style="mso-spacerun: yes"> 
</span>More legible is a backslash:<i>‘\(40)’</i>. However, literalizing
backslashes work only in conjunction with characters that are special per se or
start a group with a meaning other than plain text. Their existence is
temporary. After taking their clue the compiler discards them. If, on the other
hand, a backslash has no effect on the character that follows, the backslash
stands for itself and stays.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>This sounds awfully intimidating. And it would be, if the
system didn’t offer interactive facilities that juxtapose cause and effect. The
only thing to memorize is that there can be snags with special characters. If,
for whatever reason, you prefer back-slashing over <i>SE</i> <i>ascii</i> and
are unsure, consider your character unspecial and see how it comes out, either
by means of the method <i>show (show_translators = 1)</i> (<a href="#X_4_2_A">4.2.</a>)
or by processing short test strings, or both.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Just for the record here’s a
summary of tricky cases. To memorize them is a waste of time. Skim over them
and focus on the two exceptions to interchangeability following the summary. (<a
href="#X_2_4_4_A_">-&gt;</a>)</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'\ =space'<span style="mso-spacerun: yes">                  
</span>not valid (white space cannot be back-slashed)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'#=comment'<span style="mso-spacerun: yes">                 
</span>not valid (a comment)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'\#=comment'<span style="mso-spacerun: yes">                
</span>valid: #-&gt;comment<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'(35)=comment'<span style="mso-spacerun: yes">              
</span>valid: #-&gt;comment<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'~=tilde'<span style="mso-spacerun: yes">                   
</span>valid: ~-&gt;tilde<span style="mso-spacerun: yes">      </span>(not a
regular epxression)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'~~=2-tilde'<span style="mso-spacerun: yes">                
</span>valid: ~~-&gt;2-tilde<span style="mso-spacerun: yes">   </span>(not a
regular epxression)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'(126)=tilde'<span style="mso-spacerun: yes">               
</span>valid: ~-&gt;tilde<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'(126)(126)=2-tilde'<span style="mso-spacerun: yes">        
</span>valid: ~~-&gt;2-tilde<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'\~~=2-tilde'<span style="mso-spacerun: yes">               
</span>valid: ~~-&gt;2-tilde<span style="mso-spacerun: yes">    </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'\~[a-z]~=not(32)regex'<span style="mso-spacerun: yes">     
</span>valid: ~[a-z]~-&gt;not regex<span style="mso-spacerun: yes"> 
</span>(matches literally as written)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'(126)[a-z]~=not(32)regex'<span style="mso-spacerun: yes">  
</span>valid: ~[a-z]~-&gt;not regex<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'&quot;=double quote&quot;'<span style="mso-spacerun:
yes">            </span>not valid: no target<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>r'\&quot;=double
quote&quot;'<span style="mso-spacerun: yes">           </span>valid unintended:
&quot;-&gt;double<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'&quot;&quot;=double quote&quot;'<span style="mso-spacerun:
yes">           </span>valid: &quot;-&gt;double quote<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'\&quot;&quot;=double quote&quot;'<span style="mso-spacerun:
yes">          </span>valid: &quot;-&gt;double quote<span style="mso-spacerun:
yes">    </span>(Not a raw string: Python consumes the backslash)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>r'\&quot;&quot;=2-double-quotes&quot;'<span
style="mso-spacerun: yes">       </span>valid: &quot;”-&gt;2-double-quotes<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'(34)=double-quote&quot;'<span style="mso-spacerun: yes">        
</span>valid: &quot;-&gt;double-quote&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'&quot;(34)=double quote&quot;'<span style="mso-spacerun:
yes">        </span>valid: &quot;-&gt;double quote<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>r'\=backslash'<span
style="mso-spacerun: yes">                </span>not valid: Backslash
literalizes the separator<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>r'\\=backslash'<span
style="mso-spacerun: yes">               </span>not valid: Backslash
literalizes the separator: no target<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'(92)=backslash'<span style="mso-spacerun: yes">            
</span>valid: \-&gt;backslash<span style="mso-spacerun: yes">  </span># SE
ascii required<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'\=\==\=\=:(32)equality'<span style="mso-spacerun: yes">    
</span>valid: ==-&gt;==: equality<span style="mso-spacerun: yes">  
</span>(show () displays |==|-&gt;|\=\=: equality|)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'\=\===:(32)equality'<span style="mso-spacerun: yes">       
</span>valid: ==-&gt;==: equality<span style="mso-spacerun: yes">  
</span>(show () displays |==|-&gt;|=: equality|. Unslashed '=' stands for
target)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'(x3d)(x3d)==:(32)equality'<span style="mso-spacerun: yes"> 
</span>valid: ==-&gt;==: equality<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'\(88)=X'<span style="mso-spacerun: yes">                   
</span>valid: (88)-&gt;X<span style="mso-spacerun: yes">   </span>(Backslash
cancels ascii-ization. show () displays -&gt;|\(88)|-&gt;|X|)<br>
<span style="mso-spacerun: yes"> </span>'(88\)=X'<span style="mso-spacerun:
yes">                    </span>valid: (88\)-&gt;X<span style="mso-spacerun:
yes">  </span>(Backslash has no function and stays)<span style="mso-spacerun:
yes">  </span><br>
r'\\(88)=X'<span style="mso-spacerun: yes">                   </span>valid:
\(88)-&gt;X<span style="mso-spacerun: yes">  </span>(show () displays
-&gt;|\\(88)|-&gt;|X|)<br style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>':B:=&lt;b&gt;'<span style="mso-spacerun: yes">                   
</span>valid: :B:-&gt;(...contents of file b...)<span style="mso-spacerun:
yes">    </span>(show () displays -&gt;|&lt;b&gt;|)<br>
<span style="mso-spacerun: yes"> </span>':B:=\&lt;b&gt;'<span
style="mso-spacerun: yes">                   </span>valid:
:B:-&gt;&lt;b&gt;<span style="mso-spacerun: yes">                          
</span>(b is not a file name (show () displays -&gt;|\&lt;b&gt;|)<span
style="mso-spacerun: yes">     </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>':B:=&lt;b\&gt;'<span style="mso-spacerun: yes">                  
</span>valid: :B:-&gt;(...contents of file b\...)<span style="mso-spacerun:
yes">   </span>(Expect 'no-such-file error')<span style="mso-spacerun:
yes">     </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'(257)\#~&quot;~=unambiguous' valid:
(257)\#~&quot;~-&gt;unambiguous<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_2_4_4_A_"></a>Exception
1: <i>SE ascii</i><span style="mso-spacerun: yes">  </span><i>‘(61)’</i> cannot
literalize the target place holder <i>‘=’,</i> because with regular expressions
lurking, the target is not known at compile time and so the backslash-equality
combo needs to be available at run time. </p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'assignment=='<span style="mso-spacerun: yes">              
</span>valid: assignment-&gt;assignment<span style="mso-spacerun: yes"> 
</span>(Second equal sign is always a target place holder...)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>'assignment=(x3d)'<span style="mso-spacerun: yes">          
</span>valid: assignment-&gt;assignment<span style="mso-spacerun: yes"> 
</span>(... even ascii-ized)<o:p></o:p></span></p>

<p class=MsoBodyTextIndent><span style="mso-spacerun:
yes"> </span>'assignment=\=’<span style="mso-spacerun: yes">             
</span>valid: assignment-&gt;=<span style="mso-spacerun: yes">          
</span>(Okay. show () displays -&gt;|\=|)</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Exception 2: A backslash ending a
target cannot be typed , because it would literalize the separator. Here <i>SE
ascii</i> is a requirement.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>r'C:\temp\=TEMPDIR'<span
style="mso-spacerun: yes">           </span>not valid: no separator, no target<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>r'C:\temp(92)=TEMPDIR'<span
style="mso-spacerun: yes">        </span>valid: C:\temp\-&gt;TEMPDIR<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_"></a><span
style='font-size:18.0pt'>3. Working with Definition Sets<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_1_"><span
style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></a></p>

<p class=MsoNormal style='line-height:110%'><span style='mso-bookmark:X_3_1_'><span
style='font-size:15.0pt'>3.1. Substitution Precedence</span></span><span
style='font-size:15.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The substitution mechanism works
like this: A read pointer moves downstream byte by byte and checks whether, beginning
at its position, there are matches among the defined substitution targets. If
no match is found, the byte at the pointer is written to the output stream and
the pointer advanced by one byte. If a match is found, the substitute
associated with the matching target is written to the output stream and the
read pointer advanced by the length of the matched target. If multiple targets
match, the longest one applies. This logic is the only one that resolves
overlapping targets sensibly. It also means that substitutions don't stack on
top of one another in the manner of a C compiler expanding #define macros.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
overlapping_targets = 'be=BE being=BEING been=BEEN bee=BEE belong=BELONG
long=LONG longer=LONGER'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; story =
&quot;There was a bee belonging to hive nine longing to be a beetle and
thinking that being a bee was okay, but she had been a bee long enough and
wouldn't be one much longer.&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
(overlapping_targets)(story)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;There was a BEE
BELONGing to hive nine LONGing to BE a BEEtle and thinking that BEING a BEE was
okay, but she had BEEN a BEE LONG enough and wouldn't BE one much LONGER.&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The translation is formally
correct, although BELONGing, LONGing and BEEtle exemplify hits that might
result in collateral damage in a text. It shows that doing free text is
hazardous if freedom of error is critical. Some techniques help to avoid stray
hits. More on this as we go along.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_1_A_"></a>Regular
expressions may introduce precedence contests at run time, because they may
match targets that other definitions also match. Precedence resolution rules
with identical matches are: fixed-over-regex and
last-defined-regex-over-previously-defined-regex.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('~[aeiou]+~=vowels<span style="mso-spacerun: yes">  </span>&quot;~a+~=string
of a&quot;') ('aaaaa')<span style="mso-spacerun: yes">             </span>#
Regex contest: Last defined takes <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'string of a'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('&quot;~a+~=string of a&quot; ~[aeiou]+~=vowels') ('aaaaa')<span
style="mso-spacerun: yes">              </span># Swapped, the other one takes<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'vowels'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE ('
aaaaa=5a<span style="mso-spacerun: yes">  </span>&quot;~a+~=string of a&quot;
~[aeiou]+~=vowels') ('aaaaa')<span style="mso-spacerun: yes">   </span>#
Regex-fixed contest: fixed takes<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'5a'<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The rule fixed over regex allows to
state exceptions to sweeping matches. </p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; print SEL.SEL
(' &quot;~[aeiou][aeiou]~=[=]&quot;')('Between brackets you see double vowels')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Betw[ee]n brackets y[ou]
s[ee] d[ou]ble vowels<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; print SEL.SEL
(' aa== ee== ii== oo== uu== &quot;~[aeiou][aeiou]~=[=]&quot;')('Between
brackets you see double vowels but no repeating pairs')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Between the brackets y[ou]
see d[ou]ble vowels but no rep[ea]ting p[ai]rs<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_1_B_"></a>Regular
expressions should not be used as a shorter alternative to a manageable number of
fixed definitions. Beside potentially clouding the precedence situation, they
are also slower. They are best used so they won't compete for targets.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_2_"><span
style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></a></p>

<p class=MsoNormal style='line-height:110%'><span style='mso-bookmark:X_3_2_'><span
style='font-size:15.0pt'>3.2. Definition Files</span></span><span
style='font-size:15.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; french_ctime =
'''<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>Sun=dimanche, Mon=lundi, Tue=mardi, Wed=mercredi,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>Thu=jeudi, Fri=vendredi, Sat=samedi,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>Jan=janvier<span style="mso-spacerun: yes"> 
</span>Feb=février Mar=mars<span style="mso-spacerun: yes">  
</span>Apr=avril<span style="mso-spacerun: yes">  </span>May=mai<span
style="mso-spacerun: yes">  </span>Jun=juin<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>Jul=juillet<span style="mso-spacerun: yes"> 
</span>Aug=août<span style="mso-spacerun: yes">  </span>Sep=septembre
Oct=octobre Nov=novembre Dec=décembre'''<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; French_Ctime =
SE.SE (french_ctime)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; French_Ctime
(time.ctime())<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'mardi, mars 28 15:55:50
2006'<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Having to write such a definition
list just to get ctime in French would be impractical to the point of rendering
the system unusable. Definition sets can be stored in text files, either edited
from scratch or generated from an <i>SE object</i> using its method <i>save () </i>(<a
href="#X_4_1_7_">4.1.7.</a>)</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; file
('se/french_ctime.se', 'wa').write (french_ctime)<span style="mso-spacerun:
yes">   </span># either this way ...<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
French_Ctime.save ('se/french_ctime.se')<span style="mso-spacerun:
yes">                 </span># or this way (<a href="#X_4_1_7_">4.1.7.</a>)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Naming the file in a definition
string is equivalent to writing its contents.:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('se/french_ctime.se')(time.ctime ())<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'lundi, avril 10 11:05:43
2006'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The definitions can be arranged in any
way as long as white space separates them. Comments can be added. A comment
starts with ‘<i>#’</i> and ends at the end of the line. </p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Naming files is recursive. Definition files may name other
files. Special-purpose sets can be assembled in seconds from basic theme
modules:</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>$ echo 'astro/stars_coord.se
astro/messier_coord.se astro/geography/cities_coord.se&quot; &gt;
astro/all_coordinates.se<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>A library of files for frequently
used translations can be built little by little and each file extended when a
definition appears to be missing, or tweaked when it slips up.</p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_3_"><span
style='font-size:15.0pt'>3.3. Merging Substitution Sets</span></a><span
style='mso-bookmark:X_3_3_'></span><span style='font-size:14.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Since the definitions' format is a
single string with individual definitions separated from one another by white
space and since the order of the definitions doesn't matter, merging sets is a
simple matter of joining strings.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Ids_To_Symbol =
SE.SE ('finance/se/cusip2symbol.se finance/se/isin2symbol.se
finance/se/sec2symbol.se')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>This example shows three definition
files which translate investment-title ids to their respective symbols. There
are several id standards in use. Each file defines one of them. Lining their
names up as shown will merge their definitions into one single set that
exchanges ids for symbols whatever standard an id happens to belong to. Note
that such ids can be relied on to be unique in any data (except American stock
symbols in texts), so that a reliable system can be built with large
substitution sets.</p>

<span style='font-size:13.0pt;font-family:"Times New Roman";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:110%'>File names and definitions combine
freely.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; sentence =
&quot;Trinitrotoluene was added to the 'Chemicals Register Part 19-A' of the
United States Department of Transportation.&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('se/common_abbreviations.se')(sentence)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;Trinitrotoluene was
added to the 'Chemicals Register Part 19-A' of the U.S. DoT.&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('se/common_abbreviations.se Trinitrotoluene=TNT &quot;Chemicals
Register=CR&quot;')(sentence)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;TNT was added to the
'CR Part 19-A' of the U.S. DoT.&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Beginning and ending sets with
white space ensures that no two definitions fuse into something dysfunctional
when splicing sets.</p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_4_"><span
style='font-size:15.0pt'>3.4. Redefinitions</span></a><span style='mso-bookmark:
X_3_4_'></span><span style='font-size:14.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Defining a substitute for a target
that has been defined previously is not a mistake. The new definition simply
replaces the previous one.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Translate =
SE.SE ('old=antique old=aged')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Translate ('old
people')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'aged people'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>This does look pretty
un-straightforward, but only for the sake of illustration. Re-definitions can
be useful for defining ad hoc exceptions from definition files.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_4_1_"><i>3.4.1.
Exception</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('se/unabbreviations.se') ('personal/cv.txt', '')<span style="mso-spacerun:
yes">   </span># '' means output string (<a href="#X_5_1_">5.1.</a>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'... October 1958: Bachelor
of Arts ... March 1976: Bachelor of Arts fellowship ...'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><i>se/unabbreviations.se</i> would
expand <i>B.A.</i> as <i>Bachelor of Arts.</i> This misfires when <i>B.A.</i>
means <i>British Academy.</i> There must be a way to handle exceptions quickly
and without altering boilerplate files. Defining an exception following the
file name is fast and preserves the file. Order matters in this case. The
exception must follow the rule.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('se/unabbreviations.se &quot;B.A. fellow=British Academy fellow&quot;')
('personal/cv.txt', '')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'... October 1958: Bachelor
of Arts ... March 1976: British Academy fellowship ...'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_4_2_"><i>3.4.2. Target
Lock</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Line_Unwrap<span style="mso-spacerun: yes">  </span>= SE.SE ('(13)(10)=(32)
(10)=(32)')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The <i>Line Unwrapper</i> in <a
href="#X_2_4_1_A_">2.4.1</a>. wouldn’t be very useful because it unwraps an
entire text when it should unwrap only paragraphs. We must somehow tell it to
preserve line feeds that are part of a paragraph break. Locking a target is a
simple matter of replacing it with itself:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Line_Unwrap =
SE.SE ('(13)(10)=(32) (10)=(32) (13)(10)(13)(10)=(13)(10)(13)(10)
(10)(10)=(10)(10)')<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>If we expect indented paragraphs we
would protect those too. The target-repeat place holder '=' comes in handy.</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Line_Unwrap<span
style="mso-spacerun: yes">  </span>= SE.SE ('(13)(10)=(32) (10)=(32)
(13)(10)(13)(10)== (10)(10)== &quot;~\r?\n[ \t]~==&quot;')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Locked targets acquire precedence
over action targets quite naturally. Since they differ in adjacent characters
they are longer. </p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('foundation/anonymize_member_names.se &quot;Barbara Kycenuk==&quot;')
('foundation/board/Feb-19', '')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'List of donors: $1000: ***.
$500: ***, ***. $100: ***, ***. Signed Barbara Kycenuk, President'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_5_"><span
style='font-size:15.0pt'>3.5. Filters (A short and well-known story with a
happy ending)</span></a><span style='font-size:15.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_5_1_"><i>3.5.1.
Filtering by Deletion</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; kingdom =
'woods, rivers, castle, king, princess, mountains, terrifying dragon, people,
towns, lakes'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
whacking_the_dragon = ' &quot;terrifying dragon=&quot; '<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Task =
SE.SE (whacking_the_dragon)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Task
(kingdom)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'woods, rivers, castle,
king, princess, mountains, , people, towns, lakes'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>&quot;Well done!&quot; the king
lauds. &quot;Good riddance!&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot;No big deal.&quot; the prince
brags. &quot;I usually do bigger ones don't you know. Anyway, where's my
date?&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot;Not so fast, young man. Your task
is to pick her out together with the dead dragon. My cook gets the dragon. You
get the princess. Okay?&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot;Is that all?&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot;And just how many princesses
might be satisfactory?&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot;I'm sorry. I meant to ask is
it all I have to do?&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot;It is all you have to do and
you have one hour to do it.&quot;</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_5_2_"><i>3.5.2.
Filtering by Extraction</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Task =
SE.SE ('&quot;terrifying dragon=dead dragon&quot; woods= rivers= castle= king=
mountains= people= towns= lakes=')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Task
(kingdom)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>', , , , princess, , dead
dragon, , , '<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>&quot;There you are. Forty-seven
seconds flat.&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot;I <i>will</i> make allowance
for your juvenile rashness. You must be aware the a kingdom has more than a
half dozen ... system components. A lot more. I intend to run my entire kingdom
through your filter.&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot;Well ... may I ... have the
inventory?&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot;Certainly. Ask the
Chancellor. It has grown to four volumes, I believe.&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot; ... Four ... vo ...&quot;</p>

<p class=MsoNormal style='line-height:110%'>&quot;Four volumes! ... One
hour!&quot;</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>We skip the prince's mental
processes and rejoin him fifty-nine minutes later:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; whacking_the_dragon
= ' &quot;terrifying dragon=dead dragon&quot; '<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
everyone_stay_home = ' '.join (['(x%x)=' % n for n in range (256)])<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; print
everyone_stay_home [:30], '...', everyone_stay_home [-35:]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>(x0)= (x1)= (x2)= (x3)=
(x4)=<span style="mso-spacerun: yes">  </span>...<span style="mso-spacerun:
yes">  </span>(xfb)= (xfc)= (xfd)= (xfe)= (xff)=<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
except_the_princess = ' princess== (32)== '<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Task =
SE.SE (whacking_the_dragon + everyone_stay_home + except_the_princess)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; test_string =
&quot;I don't give a damn what kind of kingdom this is and what's in it as long
as there's a terrifying dragon and a princess.&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Task
(test_string)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'<span style="mso-spacerun:
yes">                    </span>dead dragon<span style="mso-spacerun: yes">  
</span>princess'<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_5_3_"><i>3.5.3.
Null-Edit Modes: PASS and EAT</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Null_Editor =
SE.SE ('')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Here is an <i>Editor</i> that
doesn't do any editing. What should come out?</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Null_Editor
('We expect the input stream to come out unaltered.')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'We expect the input stream
to come out unaltered.'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>And so it does. As chapter <a
href="#X_3_1_">3.1</a>. explains, <i>SE's</i> null-edit mode lets unmatched input
pass. This mode is suitable for translations and that's why it is the default
mode. It is also suitable for deletion filters, but not for extraction filters.
The prince's second task is to write an extraction filter and he does it
coaxing the pass-mode into a no-pass-mode by preconditioning the <i>Translator</i>
with a wall-to-wall set of deletions. This suits his purpose: marrying up. It
would suit our purpose if we saved <i>everyone_stay_home</i> in a file, named
it say <i>eatall.se,</i> and pulled it in first thing every time we need an
extraction filter. From a system-design point of view it would be an
unsatisfactory subterfuge and unlikely the most efficient one.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>So we introduce the null-edit mode <i>eat</i> as an opposite
to the default mode <i>pass</i>. If instead of the file name <i>eatall.se</i>,
as it were, we place the keyword <i>&lt;EAT&gt;</i> a no-pass-mode translator
results. The opposite keyword <i>&lt;PASS&gt;</i> exists but is redundant,
because all it does is <i>not</i> change the default mode.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('&lt;EAT&gt;')('The keyword &lt;EAT&gt; without definitions zaps everything.')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>''<o:p></o:p></span></p>

<p class=MsoBodyTextIndent>&gt;&gt;&gt; Heroic_Task = SE.SE
(whacking_the_dragon + ' &lt;EAT&gt; ' + except_the_princess)</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The defined substitutions, of
course, work the same in either mode.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_6_"><span
style='font-size:15.0pt'>3.6. Multiple-Pass Runs</span></a><span
style='mso-bookmark:X_3_6_'></span><span style='font-size:14.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_6_1_"><i>3.6.1. Cascading
Runs</i></a><i><o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Task
(test_string)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>' <span style="mso-spacerun:
yes">                   </span>dead dragon<span style="mso-spacerun: yes">  
</span>princess'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The king shakes his head. His
daughter is very pretty and so he thinks he should raise the stakes a little:
“I'm afraid this won't do! I want no extra spaces. You flunk. But I happen to
be in a lenient mood today and so I will grant you another half hour.”</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; deflate = '
&quot;~ +~= &quot; '<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Deflator =
SE.SE (deflate)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
essentials_with_garbage = Heroic_Task (test_string)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Deflator
(essentials_with_garbage)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>' dead dragon princess'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The prince resorts to two runs in
succession. The first one extracts what is wanted, but also extracts a lot of
extra spaces as a consequence of keeping the princess at a safe distance from
the cadaver. The extra spaces need to be removed in a second run. The prince
then decides to chain two runs in case he the king would object to two separate
filters: This is how he does it: he writes the definitions of both translations
into the same string and separates them with a free-standing vertical bar
character. This symbol starts a pass with the definitions preceding it. The
output of that pass is then the input of the next pass defined by the
definitions following the vertical bar.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Tasks =
SE.SE (whacking_the_dragon + ' &lt;EAT&gt; ' + except the princess + ' | ' +
deflate )<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Tasks
(test_string)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>' dead dragon princess'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>There is not systematic limit to
the number of passes in a translation cascade.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE ('A=B |
B=C | C=D | D=E | E=F')('ABCDEF')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'FFFFFF'<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_6_2_"><i>3.6.2.
Nesting Calls</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
essentials_with_garbage = Heroic_Task (test_string)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Deflator
(essentials_with_garbage)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>' dead dragon princess'<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Quite obviously the variable <i>essentials_with_garbage
</i>is not necessary to convey intermediate data from one call to the next if
we nest the two calls:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Deflator
(Heroic_Task (test_string))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>' dead dragon princess'<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>If cascading runs are the
pre-compile implementation of the building-block paradigm, nested calls are its
post-compile implementation. Nested calls are possible because an <i>SE Editor</i>
by default type-matches output to input.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Generic_To_Symbol
= SE.SE ('generic_to_symbol.se')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Cusip_To_Generic = SE.SE ('cusip_to_generic.se')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Generic_To_Symbol (Cusip_To_Generic ('statement.txt'))<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes"> 
</span><span style='font-size:10.0pt;font-family:"Courier New"'>'statement.txt.~se.~se'</span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes"> </span>The nested calls are functionally equivalent to </p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('cusip_to_generic.se | generic_to_symbol.se')('statement.txt')<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes"> 
</span><span style='font-size:10.0pt;font-family:"Courier New"'>'statement.txt.~se'</span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_7_"><span
style='font-size:15.0pt'>3.7. Setting Marks</span></a><span style='mso-bookmark:
X_3_7_'></span><span style='font-size:14.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Setting marks is a pre-processing
technique that translates certain features ill-suited for the task at hand to
features more obliging to its processing capabilities, or that adds features to
mark locations which the intended process needs to find but would have
difficulty finding without the mark.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_7_1_"><i>3.7.1.
Temporary Runtime Marks</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>&quot;Well done for the spaces,
except the leading one.&quot; concedes the king. &quot;But what am I to make of
a <i>dead dragon princess?</i> No no no! This is getting from bad to worse. I
want no extra spaces at all and at least a comma to keep my daughter away from
this ghastly beast. I should really whip you out of my country at this point,
but you have ten minutes left. So I will let you give it another last
try.&quot;</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Tasks =
SE.SE ('&lt;EAT&gt; &quot;terrifying dragon=+MARK+dead dragon+MARK+&quot;
princess=+MARK+=+MARK+ | +MARK+= +MARK++MARK+=,(32)' )<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Tasks
(test_string)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'dead dragon, princess'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Tasks
('home/kingdom/chancellery/inventory', '')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'princess, dead dragon'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>... happily ever thereafter.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<i><span style='font-size:13.0pt;font-family:"Times New Roman";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span></i>

<p class=MsoNormal style='line-height:110%'><a name="X_3_7_2_"><i>3.7.2. Split
Marks</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Splitting strings on section points
of various shapes is a simple matter after converting each one to the same separator,
chosen to be distinct from anything in the text:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; inventory_line
= 'Crank 2 x 1 6000-2RS1 10 26 8 460 lbs 0.019 * 2 = 0.038 GBP 124.60 (1)'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; #<span
style="mso-spacerun: yes">                 </span>^^^^^ ||||| ^^^^^^^^^<span
style="mso-spacerun: yes">             </span>|||<span style="mso-spacerun:
yes">       </span>| ^ | ^^^^^ ||| ^^^^^^<span style="mso-spacerun:
yes">        </span># ^^^ = data, ||| = split<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; #<span
style="mso-spacerun: yes">                 </span>item<span
style="mso-spacerun: yes">        </span>part number<span style="mso-spacerun:
yes">                </span>quantity<span style="mso-spacerun: yes">  
</span>weight<span style="mso-spacerun: yes">    </span>price<span
style="mso-spacerun: yes">                  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Inventory_Line_Splits = SE.SE ('lbs=| GBP=| \==| *=|
&quot;~[0-9]+\s*x\s*[0-9]+~=|')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
inventory_line_with_split_marks = Inventory_Line_Splits (inventory_line)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; print
inventory_line_with_split_marks<span style="mso-spacerun: yes">  </span>#
Verify<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Crank | 6000-2RS1 10 26 8
460 | 0.019 | 2 | 0.038 | 124.60 (1)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; item_split =
[x.strip () for x in inventory_line_with_split_marks.split ('|')]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; pn = item_split
[1].split () [0]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; price =
item_split [5].split (None, 1) [0]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; print 'Item: %s
- PN: %s - Quantity: %s - Weight: %s kg – Price: %s' % (item_split [0], pn,
item_split [3], item_split [4], price)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Item: Crank - PN: 6000-2RS1 -
Quantity: 2 - Weight: 0.038 kg – Price: 124.60<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Marks are temporary and so can be
anything that isn’t part of the data. Bytes with an ascii value from 0 to 6
(smaller than controls) make good marks in texts.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_3_8_"></a><span
style='font-size:15.0pt'>3.8. Dynamic Targeting<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><i>Dynamic targeting</i> consists
in building, compiling and running substitution definitions for targets
extracted from the source at run time.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>The inventory catalog in the previous example lists weights
in pounds and prices in British currency. A new catalog should be made with
weights in kilograms and prices in Euro and the old figures in parentheses.
Here is how it can be done using <i>SE:</i><span style="mso-spacerun: yes"> 
</span>For each line we extract the patterns with the relevant figures. With these
patterns as targets we build substitution definitions and finally run the line
through an <i>Editor</i> made with these definitions..</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; inventory_line
= 'Crank 2 x 1 6000-2RS1 10 26 8 460 lbs 0.019 * 2 = 0.038 GBP 124.60 (1)'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; #<span
style="mso-spacerun: yes">                       </span><span
style="mso-spacerun: yes">       </span>Targets to extract:<span
style="mso-spacerun: yes">  </span>^^^^^^^^^<span style="mso-spacerun:
yes">     </span>^^^^^^^ ^^^^^^^^^^<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Targets = SE.SE
(r' &lt;EAT&gt; &quot;~(lbs)|=|GBP) +[0-9]+(\.[0-9]+)?~==(10)&quot; ')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; definitions =
Targets (inventory_line).split ('\n')<span style="mso-spacerun: yes">  
</span># definitions: ['lbs 0.019', '= 0.038', 'GBP 124.60', '']<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; figure = float
(definitions [0].split ()[1]); definitions [0] = '&quot;%s=kg %.3f (lbs
%.3f)&quot;' % (definitions [0], figure * lbs_to_kg, figure)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; figure = float
(definitions [1].split ()[1]); definitions [1] = '&quot;\\%s=\\= kg %.3f (lbs
%.3f)&quot;' % (definitions [1], figure * lbs_to_kg, figure)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; figure = float
(definitions [2].split ()[1]); definitions [2] = '&quot;%s=EUR %.2f (GBP
%.2f)&quot;' % (definitions [2], figure * gbp_to_eur, figure)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; # definitions:
['&quot;lbs 0.019=kg 0.009 (lbs 0.019)&quot;', '&quot;\\= 0.038=\\= kg 0.017 (lbs
0.038)&quot;', '&quot;GBP 124.60=EUR 180.67 (GBP 124.60)&quot;', '']<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; new_line =
SEL.SEL (' '.join (definitions)) (inventory_line)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; print new_line<o:p></o:p></span></p>

<p class=MsoBodyTextIndent>Crank 2 x 1 6000-2RS1 10 26 8 460 kg 0.009 (lbs
0.019) * 2 = kg 0.017 (lbs 0.038) EUR 180.67 (GBP 124.60) (1)</p>

<p class=MsoBodyTextIndent><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>The <i>Editor</i> object becomes
obsolete after one call and so it doesn’t need to be assigned to a variable. <br
style='mso-special-character:line-break'>
<![if !supportLineBreakNewLine]><br style='mso-special-character:line-break'>
<![endif]><span style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_"><span
style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></a></p>

<p class=MsoNormal style='line-height:110%'><span style='mso-bookmark:X_4_'><span
style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></span></p>

<p class=MsoNormal style='line-height:110%'><span style='mso-bookmark:X_4_'><span
style='font-size:18.0pt'>4. Working with SE Objects</span></span><span
style='font-size:18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_1_"><span
style='font-size:15.0pt'>4.1. The SE Object</span></a><span style='mso-bookmark:
X_4_1_'></span><span style='font-size:14.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The method <i>show ()</i> displays
the object's runtime settings:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyTextIndent>&gt;&gt;&gt; SE_Object.show ()</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>SEL.DEFINITION_PATH<span
style="mso-spacerun: yes">  </span>&gt; None (module attribute)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&lt;SE.SE instance at
0x00F8AEB8&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Compiling<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span>MAX_TARGET_LENGTH<span style="mso-spacerun: yes">  </span>&gt;
1024<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Processing<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span>INPUT_PATH<span style="mso-spacerun: yes">         </span>&gt;
None<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span>OUTPUT_PATH<span style="mso-spacerun: yes">        </span>&gt;
None<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span>FILE_HANDLING_FLAG &gt; 0<span style="mso-spacerun: yes">   
</span>(No existing file may be replaced)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span>BACKUP_EXTENSION<span style="mso-spacerun: yes">   </span>&gt;
.bak (Replaced files take this extension)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Developing<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span>KEEP_CASCADE<span style="mso-spacerun: yes">       </span>&gt; 0
(no)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span>CASCADE_DATA_CLIP<span style="mso-spacerun: yes">  </span>&gt;
128<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The topmost item <i><span
style='font-size:10.0pt;font-family:"Courier New"'>SEL.DEFINITION_PATH</span></i><span
style='font-size:10.0pt;font-family:"Courier New"'> </span>is a module
attribute, because it needs to be available when the <i>SE object</i> is created.
It supplies a path component to definition files that don’t have their own path
(slash). By default is doesn’t supply anything. A pathless name is supposed to
refer to the current working directory.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.set
(definition_path = 'I:/Expeditions/Africa/Sahara/2003/se')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Species_Latin =
SE.SE ('reptiles.se insects.se coleopteran.se rodents.se canids.se birds.se')<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>The other items are instance
variables . They can be changed with the method set (<i>keyword arguments</i>).
</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object.set
(max_target_length = 2000)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>The keywords are the same as the
names of the settings spelled in lower case letters. The keyword <i>reset</i>
will restore the defaults of all settings that are not simultaneously getting
changed.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object.set
(reset = 1, max_target_length = 2000)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_1_1_"><i>4.1.1.
Maximum Target Length</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>MAX_TARGET_LENGTH<span
style="mso-spacerun: yes">  </span>&gt; 1024<span style="mso-spacerun: yes">  
</span>(Default: 1024<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Longer targets will compile without
warning, but may not translate correctly. The setting actually determines the
length of the buffer for processing files.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_1_2_"><i>4.1.2. Data Paths</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>INPUT_PATH<span
style="mso-spacerun: yes">    </span>&gt; None<span style="mso-spacerun:
yes">      </span>(Default: None)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>OUTPUT_PATH<span
style="mso-spacerun: yes">   </span>&gt; None<span style="mso-spacerun:
yes">      </span>(Default: None)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object.set
(input_path = patents/portable_aura_energizer/19.3',<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>output_path =
patents/applications/portable_aura_energizer/20.0')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object ('cip_17',
'cip_17')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'patents/portable_aura_energizer/20.0/cip')<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The path settings apply only to
file names without a path component. Any file name with its own path (slash) is
deemed an exception to the setting and is used as is. The setting stays put.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('scratchpad/retrofits')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'scratchpad/retrofits.~se'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('retrofits', 'temp/retrofits')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'temp/retrofits'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_1_3_"><i>4.1.3.
Protecting and Altering Existing Files</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>FILE_HANDLING_FLAG<span
style="mso-spacerun: yes">   </span>&gt; 0<span style="mso-spacerun: yes">  
</span>(Default is 0: no existing data files may be changed<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; file_name =
SE_Object ('some_file_name', 'exisiting_file')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'exisiting_file'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; file_name =
SE_Object ('some_file_name', 'exisiting_file')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'~QK11342'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The second time around the named
output file exists. The <i>file handling flag </i>doesn’t allow to change its
name. A artificial name is used and returned.</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object.set
(file_handling_flag = 2)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Objet
('some_file_name', 'exisiting_file')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'exisiting_file'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Done!</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Flag 1: The output is appended to named output</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Flag 2: Named output may be overwritten. If the name of the
output file is the same as the name of the input file, a translation in place
results.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Flag 3: A translation in place results if no output file is
named.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Actually, no data ever gets overwritten, only file names. If
altered in any way, the existing file lends its names to the new file while
taking on a backup extension. <i>(Next chapter).</i> </p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>The <i>file handling flag</i> can be set at from the start.
The constructor has a keyword argument <i>file_handling_flag = n</i>.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; New_Names =
SE.SE ('MODULE_X=MODEX &quot;Module X=Modex&quot; Module_X=Modex MODULE_0=M-0',
2)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; def
get_pys_and_htms (collector_list, directory, file_names):<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">        </span>for
name in file_names:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">           </span>if
name.endswith ('.py') or name.endswith ('.htm'):<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">             
</span>collector_list.append (name)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; file_names = []<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; os.path.walk
('src/modex', get_pys_and_htms, file_names)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; for name in
file_names:<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><span style="mso-spacerun: yes">       
</span>New_Names (name)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'src/modex/module_x.py'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'src/modex/module_0.py'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'src/modex/doc/module_x.htm'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'src/modex/doc/module_x_examples.htm'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'>All originals are
preserved with the backup extension. <i>(Next chapter).</i><span
style='font-size:10.0pt;font-family:"Courier New"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_1_4_"><i>4.1.4. Backup
File Extension</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>BACKUP_EXTENSION<span
style="mso-spacerun: yes">  </span>&gt; .bak<span style="mso-spacerun: yes">   
</span>(Default: '.bak')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>If an output file would overwrite an
existing file, the new file takes on the name of the source file and the source
file gets the backup extension appended to its name. No data ever gets
overwritten. The default <i>.bak</i> is a fairly common extension for backup
files. One might want to change it to avoid confusion with other applications'
backups.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Cleaning up obsolete backups is left entirely to the user. If
he neglects it, he is bound to accumulate lots of backups with an ever
increasing number of extensions <i>(file_name.bak.bak.bak.bak...)</i> The
oldest are the longest. The command <i>rm file_name*bak.bak.bak</i> would
delete all backups save the two most recent ones.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_1_5_"><i>4.1.5.
Intermediate Data</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>KEEP_CASCADE<span
style="mso-spacerun: yes">  </span>&gt; 0<span style="mso-spacerun: yes">    
</span>(Default: delete)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Setting <i>1</i> <i>(not 0)</i>
will preserve an entire translation cascade for debugging purposes. If the flag
is set and a run has been done, <i>show ()</i> will display the intermediate
translations.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Heroic_Tasks.set (keep_cascade = 1)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Tasks
(kingdom)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'princess, dead dragon'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Heroic_Tasks.show ()<o:p></o:p></span></p>

<p class=MsoBodyTextIndent>(... runtime settings ...)</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Translation Cascade<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>----------------------------------------------------------------------------------<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span>woods, rivers, castle, king, princess, mountains, terrifying
dragon, people, towns, lakes<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>0
--------------------------------------------------------------------------------<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span>+MARK+princess+MARK++MARK+dead dragon+MARK+<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>1
--------------------------------------------------------------------------------<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span>princess, dead dragon<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The translation cascade shows all
translation stages from the original through the intermediate stages to the
final output. The numbers are the indexes of the Translator list. By default
each line is clipped at 128 characters.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>If input is a string, intermediate data are also strings. If input
is a file name or a file object, intermediate data are files. The display
starts with the respective file name.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Another similar debugging technique
consists in breaking the cascade prematurely. Calling a run, the keyword <i>cascade_break
= n</i> takes the number of passes to do.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes"> </span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Tasks
(kingdom, cascade_break = 1)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'+MARK+princess+MARK++MARK+dead
dragon+MARK+'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_1_6_"></a><i>4.1.6.
Clipping the Translation Cascade Display</i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>CASCADE_DATA_CLIP<span
style="mso-spacerun: yes">  </span>&gt; 128<span style="mso-spacerun: yes">   
</span>(Default: 128)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>To maintain legibility with
substantial output volumes the cascade lines get clipped at this length.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_1_7_"></a><i>4.1.7.
Saving an Editor's Definitions</i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>For his CD project &quot;The Royal
Upstart&quot; the prince takes the opportunity to save his <i>Heroic_Tasks:<o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Heroic_Tasks.save ('upward_mobility/whacking_a_dragon.se')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>$ cat
upward_mobility/whacking_a_dragon.se<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'># SE Definitions Tue May 23
11:43:25 2006<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>#
upward_mobility/whacking_a_dragon.se<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&lt;EAT&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'># Multi-Byte Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>princess=+MARK+princess+MARK+<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>&quot;terrifying dragon=+MARK+dead dragon+MARK+&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'># SE Definitions Tue May 23
11:43:25 2006<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>#
upward_mobility/whacking_a_dragon.se<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'># Multi-Byte Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>+MARK+=<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>&quot;+MARK++MARK+=, &quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>(Not shown are lines thrown in to
help organizing edits.).<span style="mso-spacerun: yes">  </span></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes"> </span></p>

<p class=MsoNormal style='line-height:110%'>Now a candidate prince facing a
dragon can make his <i>Kingdom_Fixer</i> from the CD like this:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Kingdom_Fixer =
SE.SE ('upward_mobility/whacking_a_dragon.se')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><i>Translator objects</i> (next
chapter) can be saved individually. They have their own <i>save ()</i> method
which works identically.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<span style='font-size:15.0pt;font-family:"Times New Roman";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:110%'><a name="X_4_2_"><span
style='font-size:15.0pt'>4.2. The Translator Object</span></a><span
style='font-size:15.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Heroic_Tasks.Translators<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>[&lt;SE.SE instance at
0x02821AA8&gt;, &lt;SE.SE instance at 0x00F78418&gt;]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>The <i>SE object</i> contains a
list of <i>Translator objects.</i> Each <i>Translator</i> processes the data
stream and passes its output on to the next <i>Translator</i> in the list.
Let’s make a one-pass <i>Editor</i> to demonstrate its methods. </p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Demo = SE.SE
('''<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;ABC=(=): multi byte
&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;~[A-Z]+~=(=): soft re
&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;~A[BCD]+~=(=): hard re
&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;X=(=): single byte
&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>FILE=&lt;file_name&gt;''' )<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><a name="X_4_2_A"></a><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Demo.Translators [0].show ()<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>SE.Translator &lt;SE.Translator
instance at 0x00E15490&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>NULL_MODE &gt; 0 (PASS:
unmatched data passes)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Single-Byte Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>1: |X|-&gt;|(=): single byte |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Multi-Byte Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>2: |ABC|-&gt;|(=): multi byte |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>3: |FILE|-&gt;|&lt;file_name&gt;|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Hard Regex Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>4: |A[BCD]+|-&gt;|(=): hard re |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Soft Regex Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>5: |[A-Z]+|-&gt;|(=): soft re |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The display shows the definitions
alphabetically ordered in four categories. The categories are ordered on
processing speed fast to slow. Soft regexes range slowest. Those cannot be put
into an array indexed on the target's initial, because they match more than one
initial. Some hard-to-interpret hard expressions may also go the soft list.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Calling the editor's method <i>show ()</i> with the argument
1—<i>show (show_translators=1)</i>—will display its <i>Translator(s)</i> too.
This is particularly useful in conjunction with the cascade display,
juxtaposing cause and effect.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_3_"><span
style='font-size:15.0pt'>4.3. Editing a Translator</span></a><span
style='font-size:15.0pt'> Interactively<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; T =
Demo.Translators [0]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_3_1_"><i>4.3.1. Adding
Definitions</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; T.add ('''<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;Y=(=): a new single
byte &quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;X=(=): revised single
byte &quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&quot;XYZ=(=): a new multi
byte &quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>go_away=<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>(=parenthesis<span
style="mso-spacerun: yes">  </span>)=parenthesis''')<o:p></o:p></span></p>

<span style='font-size:10.0pt;font-family:"Courier New";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; T.show ()<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>SE.Translator
&lt;SE.Translator instance at 0x00E15490&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>NULL_MODE &gt; 0 (PASS:
unmatched data passes)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Single-Byte Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>1: |(|-&gt;|parenthesis|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>2: |)|-&gt;|parenthesis|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>3: |X|-&gt;|(=): revised single byte |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>4: |Y|-&gt;|(=): a new single byte |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Multi-Byte Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>5: |ABC|-&gt;|(=): multi byte |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>6: |FILE|-&gt;|&lt;file_name&gt;|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>7: |XYZ|-&gt;|(=): a new multi byte |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span><span style="mso-spacerun: yes">  </span>8: |go_away|-&gt;||<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Hard Regex Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>9: |A[BCD]+|-&gt;|(=): hard re |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Soft Regex Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>10: |[A-Z]+|-&gt;|(=): soft re |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_3_2_"><i>4.3.2.
Deleting Definitions</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; T.drop (3,7)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Deletions go by the numbers which <i>show
()</i> displays. They are sequential numbers that get reassigned after each
deletion or addition. So <i>show ()</i> needs to be called prior to each
deletion. If <i>drop ()</i> is called without argument, the <i>show ()</i>
display comes up automatically.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; T.show ()<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>SE.Translator
&lt;SE.Translator instance at 0x00E15490&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>NULL_MODE &gt; 0 (PASS:
unmatched data passes)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Single-Byte Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>1: |(|-&gt;|parenthesis|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>2: |)|-&gt;|parenthesis|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>3: |Y|-&gt;|(=): a new single byte |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Multi-Byte Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>4: |ABC|-&gt;|(=): multi byte |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>5: |FILE|-&gt;|&lt;file_name&gt;|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>6: |go_away|-&gt;||<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Hard Regex Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>7: |A[BCD]+|-&gt;|(=): hard re |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Soft Regex Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>8: |[A-Z]+|-&gt;|(=): soft re |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_4_3_3_"></a><i>4.3.3.
Reversing a Translator</i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; T_Reversed =
T.reverse (report_irreversibles = 1)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Skipping irreversible definitions:<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%;tab-stops:567.75pt'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>5: |FILE|-&gt;|&lt;file_name&gt;|<span style='mso-tab-count:
1'>                                                                  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>6: |go_away|-&gt;||<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>7: |A[BCD]+|-&gt;|(=): hard re |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>8: |[A-Z]+|-&gt;|(=): soft re |<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>1: |\(|-&gt;|parenthesis|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>2: |)|-&gt;|parenthesis|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Irreversible are: substitute files,
regular expressions, deletions and multiple targets with identical substitutes.
The <i>null-edit mode</i> stays the same.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; T_Reversed.show
()<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>SE.Translator
&lt;SE.Translator instance at 0x0285E030&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>NULL_MODE &gt; 0 (PASS:
unmatched data passes)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>Multi-Byte Targets<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span><span style="mso-spacerun: yes">  </span>1: |(ABC): multi byte
|-&gt;|ABC|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>2: |(Y): a new single byte |-&gt;|Y|<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>With long lists of reversible
definitions, the reverse method is a great help:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Generic_To_Isin_T = SE.SE ('se/isin_to_generic.se').Translators [0].reverse ()<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Generic_To_Isin_T.save ('se/generic_to_isin.se')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Or as a one-liner:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE.SE
('se/isin_to_generic.se').Translators [0].reverse ().save
('se/generic_to_isin.se')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><i>SE objects</i> don't have the
method <i>reverse ()</i>. With cascades running backwards and the likelihood of
irreversible definitions, a properly functioning reversal is too shaky a
prospect. Reversing each translator separately and reassembling them backwards
is a fairly straightforward task that ensures that eventual problems don't go
unnoticed. A <i>Translator</i> list can be attached to an <i>SE object</i>
hacker’s style:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyTextIndent>&gt;&gt;&gt; Reversed_SE_Object ('')</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Reversed_SE_Object.Translators = [Reversed_T2, Reversed_T1]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Reversed_SE_Object.save ('se/reversed_whatever.se')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_5_"><span
style='font-size:18.0pt'>5. Input, Output</span></a><span style='font-size:
18.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; translation =
SE_Object (input, [output])<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Either <i>input </i>and <i>output</i>
may be a string, an open file object or a file name. </p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Without the second argument the output will match the type of
the input. If input is a file name, an output file name will be auto-generated
by appending the extension <i>~se</i> to the input file name.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>A returned file name is for a file that has been written to
the disk.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Providing an output parameter overrides type-matching, so
that each input type can be combined with any output type.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<span style='font-size:15.0pt;font-family:"Times New Roman";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:110%'><a name="X_5_1_"><span
style='font-size:15.0pt'>5.1. Input Types and Output Options</span></a><span
style='font-size:15.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_5_1_1_"><i>5.1.1. Input:
String</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Strings are ideal for speedy
interactive work and system development.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('string')<span style="mso-spacerun: yes">                        </span>-&gt;
a string<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object ('
name_of_existing_file ')<span style="mso-spacerun: yes">       </span>-&gt;
same as string. Leading or ending space means: edit name, not file<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('string', 'file_name')<span style="mso-spacerun: yes">           </span>-&gt;
the file_name<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('string', (open file object))<span style="mso-spacerun: yes">    </span>-&gt;
the open file object<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_5_1_2_"><i>5.1.2. Input:
File Name</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>File names are appropriate for routine
work and volume data. The <i>SE object</i> has an existing-file-change flag
that can be set to handle any contingency.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('file_name')<span style="mso-spacerun: yes">                     </span>-&gt;
'file_name.~se'<span style="mso-spacerun: yes">  </span>if
file-change-permission is 0<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('file_name')<span style="mso-spacerun: yes">         </span><span
style="mso-spacerun: yes">            </span>-&gt; 'file_name' if file-change
permission flag &gt; 0<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('file_name, file_name')<span style="mso-spacerun: yes">          </span>-&gt;
'file_name' if file-change-permission &gt; 0<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('file_name, file_name_2')<span style="mso-spacerun: yes">        </span>-&gt;
'file_name_2' if file_name_2 does not exist or flag &gt; 0<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('file_name, file_name_2')<span style="mso-spacerun: yes">        </span>-&gt;
'~???????.~se' (automatic name) if file_name_2 exists and flag is 0<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('file_name', '')<span style="mso-spacerun: yes">                 </span>-&gt;
a string<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
('file_name', (open file object)) -&gt; the open file object<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_5_1_3_"><i>5.1.3. Input:
File Object</i></a></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>A programmer might at some point
see the need to pass a file object through a translator. He would insert an <i>SE</i>
translation at the appropriate location in his code, hand it his object, get
one returned and be on his way without having to go through unnecessary disk
reads and writes.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Working with file objects the programmer retains full
control. File cursors are taken as they come in and left as they are. Nested
calls will not work with file objects, because the file cursor needs to be
reset explicitly between calls. (f.seek (0))</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
((open file object))<span style="mso-spacerun: yes">                      
</span>-&gt; a new open file object<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
((open file object), (open file object 2)) -&gt; returns the file object 2<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
((open file object), 'file_name')<span style="mso-spacerun: yes">         
</span>-&gt; 'file_name'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Object
((open file object), (open file object))<span style="mso-spacerun: yes">  
</span>-&gt; returns a string<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_6_"></a><span
style='font-size:18.0pt'>6. The Message Log<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>All objects have a log which
accumulates compiler and processor reports, chiefly about compiling and IO
snags. The <i>SE</i> method <i>show_log ()</i> displays whatever has
accumulated since the object’s creation. Calling with argument <i>1</i> will
show the <i>Translators’</i> logs as well.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
SE_Object = SE.SE (' /se/htm2iso.se ==equal')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
SE_Object.show_log ()<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>Mon
Jun 26 13:27:16 2006 - Compiler - Ignoring single word '/se/htm2iso.se'. Not an
existing file '/se/htm2iso.se'.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>Mon
Jun 26 13:27:16 2006 - Compiler - Ignoring single word '==equal'. Not an
existing file '==equal'.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
SE_Object (99)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
SE_Object.show_log ()<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>Mon
Jun 26 13:34:47 2006 - Compiler - Ignoring single word '/se/htm2iso.se'. Not an
existing file '/se/htm2iso.se'.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>Mon
Jun 26 13:34:47 2006 - Compiler - Ignoring single word '==equal'. Not an
existing file '==equal'.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>Mon
Jun 26 13:34:53 2006 - Editor - Illegal argument type: 99<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_7_"></a><span
style='font-size:18.0pt'>7. SE Light<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><i>SE's</i> extensive debugging
facilities are dead weight for proven production routines and trivial little
tasks. </p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; import SEL<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SEL.SEL
('genius=expert ingenious=dedicated admirable=agreeable', file_handling_flag =
3)('job_application')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'job_application'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><i>SEL</i> offers the processing
functionality of <i>SE</i> without any of its development functions <i>(show,
add, drop, save, reverse)</i>. The methods <i>set ()</i> and <i>show_log ()</i>
are available, though.</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_7_1_"></a><span
style='font-size:15.0pt'>7.1. Type Casting Back and Forth<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>If the <i>SE.SE</i> constructor
receives an <i>SE Light object</i> instead of a substitutions list, it becomes
an interactive copy of the <i>SEL object</i>. To go the other way, the <i>SE
object</i> has a method <i>SEL ()</i> which returns a light copy of itself.</p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_Light<span
style="mso-spacerun: yes">      </span>= SE_With_Bells.SEL ()<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; SE_With_Bells =
SE.SE (SE_Light)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_"></a><span
style='font-size:18.0pt'>8. Some Examples <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_1_"></a><span
style='font-size:15.0pt'>8.1. Programming<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_1_1_"></a><i>8.1.1.
Revising Names<o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>As the number of attributes,
constants and variables grows in the course of a coding project, keeping track
of them tends to become increasingly difficult as their number grows. When
mix-ups start to happen, a sweeping revision of names aiming at more suggestive
accuracy may help.</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
function_</span><span style='font-size:10.0pt;font-family:"Courier New"'>names
= '''<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>&quot;ie (=interest_earned (&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>&quot;i_e (=interest_earned (&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>&quot;intr (=interest_earned (&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>&quot;icost (=interest_cost (&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">  </span><span style="mso-spacerun: yes">  </span>&quot;i_cost
(=interest_cost (&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>&quot;int_3 (=interest_accrued (&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>&quot;int_proj (=interest_projected (&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>&quot;est_intr (=interest_estimated (&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>&quot;intr_ (=interest_average (&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>&quot;intr_pa_ (=interest_estimated_per_annum (&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">    </span>&quot;intr_pa (=interest_per_annum (&quot; '''<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Revise_Function_Names = SEL.SEL (function_names)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Revise_Function_Names.set (file_handling_flag = 3, input_path =
'project_7/preliminary/src')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; for name in
file_names: Revise_Function_Names (name)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'project_7/preliminary/src/_setup.py'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'project_7/preliminary/src/_constants.py'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'project_7/preliminary/src/_setup.py'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'project_7/preliminary/src/_utilities.py'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'project_7/preliminary/src/P7.PY'<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:130%'><span style='font-size:10.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:130%'>In-place translations don’t hold up
workflow unduly. If something goes awry, the old files are still there with the
backup extenstion added to their names. <i>SE</i> never deletes any source
data. It just adds another backup extension to all prior backups.<span
style='font-size:10.0pt;font-family:"Courier New"'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_1_2_"></a><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><i>8.1.2. Deleting Tracing
Statements<o:p></o:p></i></p>

<span style='font-size:15.0pt;font-family:"Times New Roman";mso-fareast-font-family:
"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA'><br clear=all style='page-break-before:always'>
</span>

<p class=MsoNormal style='line-height:110%'>By the time a<span
style="mso-spacerun: yes">  </span>program is finished, it may have accumulated
a lot of print statements that got commented in and out as needed to trace
execution<span style='mso-bidi-font-size:12.0pt'>—</span>something like this: </p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span># STOCKS_.PY <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>(...)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>keep = '\n'.join
(['&quot;~&gt;%s&lt;.*?[0-9][0-9]%%~==(10)&quot;' % s for s in symbols])<span
style="mso-spacerun: yes">            </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>## print 'keep', keep<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>eat_tags = ' &quot;~&lt;.*?&gt;~= &quot; &gt;= '<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>## print 'eat_tags', eat_tags<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>Data_Extractor = SE.SE (EAT + keep + RUN + eat_tags) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>## Data_Extractor.set (keep_cascade = 1, cascade_data_clip =
500)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>url = 'http://finance.yahoo.com/q/cq?d=v1&amp;s=' + '+'.join
(symbols)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">   </span>(... etc ...)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>These statements need to be removed
in the end. In anticipation of the necessity a distinctive comment pattern was
used <i>(‘## ‘).</i><span style="mso-spacerun: yes">  </span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Finisher = SEL.SEL ('&quot;~\n[ \t]*## .*~=&quot;</span><span style='font-size:
10.0pt;font-family:"Courier New"'>'</span><span style='font-size:10.0pt;
mso-bidi-font-size:8.0pt;font-family:"Courier New"'>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Finisher.set (input_path = </span><span style='font-size:10.0pt;font-family:
"Courier New"'>'finance/src', file_handling_flag = 2)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; for file_name
in ('stocks_.py', 'statement_.py', 'balance_.py'):<span style="mso-spacerun:
yes">  </span># Underscore would identify development file<span
style="mso-spacerun: yes">  </span></span><span style='font-size:10.0pt;
mso-bidi-font-size:8.0pt;font-family:"Courier New"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">       </span></span><span style='font-size:10.0pt;mso-bidi-font-size:
8.0pt;font-family:"Courier New"'>Finisher (file_name, file_name.replace (</span><span
style='font-size:10.0pt;font-family:"Courier New"'>'_','')<span
style="mso-spacerun: yes">  </span># No underscore: release<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'finance/src/stocks.py'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'finance/src/statement.py'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'finance/src/balance.py'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_1_3_"></a><i>8.1.3.
Listing Names of Classes, Functions, Methods, Imports, Globals ...<o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
List = SEL.SEL ('''&lt;EAT&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>&quot;~[ \t]*class
(.|\n)+?:~==(10)&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>&quot;~[ \t]*def (.|\n)+?:~==(10)&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>&quot;~[ \t]*import .+~==(10)&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>&quot;~[ \t]*from .+~==(10)&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>&quot;~[ \t]*global .+~==(10)&quot;''')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
print List ('src/Python/SE.PY')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>src/Python/SE.PY.~se<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'>The following is
the complete structure of <i>SE.PY</i> as captured in <i>src/Python/SE.PY.~se</i><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'> </span>with
a few quick hand edits.</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>import
SEL<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>import
sys<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
set (reset = NO, definition_path = None):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
show ():<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
about ():<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
version ():<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>class
SE (SEL.SEL):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def __init__ (self, substitutions,
file_handling_flag = 0):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def SEL (self):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def show (self, show_translators = NO):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def set (self, reset = NO,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>input_path<span
style="mso-spacerun: yes">         </span>= None,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>output_path<span
style="mso-spacerun: yes">        </span>= None,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>file_handling_flag = None,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>max_target_length<span
style="mso-spacerun: yes">  </span>= None,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>cascade_data_clip <span
style="mso-spacerun: yes"> </span>= None,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>backup_extension<span
style="mso-spacerun: yes">   </span>= None,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>keep_cascade<span
style="mso-spacerun: yes">      </span><span style="mso-spacerun:
yes"> </span>= None,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">            </span>verbose<span style="mso-spacerun:
yes">            </span>= None ):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def __call__ (self, input, output = None, cascade_break
= None):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def _do_file (self, in_file, out_file_path,
cascade_break = None):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def do_string (self, s, output = None, cascade_break
= None):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def save (self, file_name):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>class
Translator (SEL.Translator):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def __init__ (self, TL = None):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def reverse (self, report_irreversibles =
NO):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def show (self):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>def show_single_byte (show_count):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>def show_multi_byte (show_count):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>def show_hard_re (show_count):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>def show_soft_re (show_count):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def add (self, definitions):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def drop (self, *target_numbers):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>def save (self, file_name):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>def save_single_byte ():<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>def save_multi_byte ():<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span><span style="mso-spacerun:
yes">   </span>def save_hard_re ():<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">      </span>def save_soft_re ():<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
_char_to_ascii (c):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
_translator_to_definition (x, initials, specials):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
_target_translator_to_definition (t):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
_substitute_translator_to_definition (s):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
_target_translator_to_display (t):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
_substitute_translator_to_display (s):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>def
_visualize_re (s):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><a name="X_8_2_"></a><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:15.0pt'>8.2. HTM<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_2_1_"></a><i>8.2.1. A
Link Extractor<o:p></o:p></i></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Link_Extractor = SEL.SEL ('&lt;EAT&gt;
~[hH][tT][tT][pP][A-Za-z0-9/_\-.,:]+~==(10)')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
f = urllib.urlopen ('http://www.mozilla.com/firefox/central/')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
print Link_Extractor (f.read ())<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>http://www.mozilla.com/firefox/search.html<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>http://www.mozilla.com/firefox/search.html<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>http://www.mozilla.com/firefox/search.html<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>https://addons.mozilla.org/<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>https://addons.mozilla.org/<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>(...
many more ...)<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_2_2_"></a><i>8.2.2. A
Tag Stripper<o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Tag_Stripper = SEL.SEL ('&quot;~&lt;(.|\n)*?&gt;~= &quot; se/htm2iso.se |
&quot;~\n[ \t\n]*~=(10)&quot; &quot;~ +~= &quot;')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><i>htm2iso.se</i> is a definition
file decoding the HTM ampersand escapes. The second pass strips all empty lines
and deflates white space..</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Anything that has a distinct beginning and a distinct ending
can be stripped this way or extracted , even if it spans many lines.</p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><a name="X_8_3_"></a><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:15.0pt'>8.3. Expanding <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_3_1_"></a><i>8.3.1. A
Two-Pass Expanding Editor<o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
paths = 'FROM=photo/pictures TO=projects/sun_dial/pictures'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
File_Mover = SEL.SEL ('&quot;~[^ ,]*|.*$~=mv FROM/= TO/=&quot; ,=(10)
,(32)=(10) | ' + paths)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
print File_Mover ('general_view.jpg, dial.jpg, time_zones.bmp,
time_equation.data')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>mv
photo/pictures/general_view.jpg projects/sun_dial/pictures/general_view.jpg<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>mv
photo/pictures/dial.jpg projects/sun_dial/pictures/dial.jpg<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>mv
photo/pictures/time_zones.bmp projects/sun_dial/pictures/time_zones.bmp<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>mv
photo/pictures/time_equation.data projects/sun_dial/pictures/time_equation.data<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:13.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%;tab-stops:108.0pt'><i><span
style='mso-tab-count:1'>                                    </span><o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_3_2_"></a><i>8.3.2.
Combining two One-Pass Editors<o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'>Revisiting <a href="#X_2_2_3_">2.2.3</a>:
If the assembled merge components contain generic place holders for
case-related data, an Editor made for the purpose will finish the document in a
second pass. We start with the body of the letter which the target <i>TEXT </i>will
pull in. The rest is routine templates. This is the letter:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; letter =
'PL_OPEN\n\n\nTEXT\n\nBYE'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><i>PL_OPEN</i>: is the routine
template (letterhead, address and date). <i>BYE</i> is the sign-off. The names
of the templates would associate with mnemonic<span style="mso-spacerun: yes"> 
</span>targets in the file <i>corr/se/merge_components.se.</i></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>$ cat
corr.se.merge_components.se<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>(...)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>PL_OPEN=&lt;corr/se/private_open.se&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>BYE=&lt;corr/se/private_signoff.se&gt;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>(... many more ...)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>A first <i>Editor</i> assembles the
merge components:</p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Merge_Expander =
SE.SE ('corr/se/merge_components.se
TEXT=&lt;corr/letters/invitation-feb-3.txt&gt;’)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>Next we define the place holders
which we know are contained in the templates, for instance like this: </p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; place_holders =
</span><span style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>'''</span><span
style='font-size:10.0pt;font-family:"Courier New"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&quot;</span><span
style='font-size:10.0pt;font-family:"Courier New"'>@DATE@=January 18, 2006</span><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&quot;</span><span
style='font-size:10.0pt;font-family:"Courier New"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&quot;</span><span
style='font-size:10.0pt;font-family:"Courier New"'>@NAME@=Skip Spank</span><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes"> </span>@SUBJECT=</span><span style='font-size:10.0pt;
font-family:"Courier New"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&quot;</span><span
style='font-size:10.0pt;font-family:"Courier New"'>@STREET@=Main Street 1000 W</span><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&quot;</span><span
style='font-size:10.0pt;font-family:"Courier New"'>@CITY@=Jiggs</span><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&quot;</span><span
style='font-size:10.0pt;font-family:"Courier New"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>@STATE@=NY<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes"> </span>@ZIP@=12345-6789<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>With these we create another <i>Editor:</i></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:10.0pt;
font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Specs_Expander
= SEL.SEL (place_holders)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_7_3_2_A"></a>Finally we
call a two-pass run using two nested calls:</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; Specs_Expander
(Merge_Expander (letter), </span><span style='font-size:10.0pt;mso-bidi-font-size:
8.0pt;font-family:"Courier New"'>'corr/private/invitation-feb-3'</span><span
style='font-size:10.0pt;font-family:"Courier New"'>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>'</span><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>corr/private/invitation-feb-3</span><span
style='font-size:10.0pt;font-family:"Courier New"'>'<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><i><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'>When we need to define the place
holders and don’t exactly know which ones the merge brings together we can
extract them like this:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; print SEL.SEL
('&lt;EAT&gt; ~@[A-Z0-9]+@~==(10)')(Merge_Expander (letter))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>@DATE@<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>@NAME@<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>@STREET@<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>@CITY@<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>@ZIP@<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>@SUBJECT@<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>@NAME@<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_4_"></a><span
style='font-size:15.0pt'>8.4. Siphoning (Reasonably) Current Stock Quotes from
an Internet Site <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%;tab-stops:133.5pt'><span
style='font-size:15.0pt'><span style='mso-tab-count:1'>                                    </span><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; def
get_stock_quotes (symbols):<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>import urllib<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>url = 'http://finance.yahoo.com/q/cq?d=v1&amp;s=' + '+'.join
(symbols)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>htm_page = urllib.urlopen (url)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>import SEL<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>keep = '&quot;~[A-Z]+ [JFMAJSOND].+?%~==(10)&quot;<span
style="mso-spacerun: yes">  </span>&quot;~[A-Z]+
[0-9][0-2]?:[0-5][0-9][AP]M.+?%~==(10)&quot;'<span style="mso-spacerun:
yes">           </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>Data_Extractor = SEL.SEL ('&lt;EAT&gt; ' + keep) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span></span><span style='font-size:10.0pt;mso-bidi-font-size:8.0pt;
font-family:"Courier New"'>Tag_Stripper = SEL.SEL ('&quot;~&lt;(.|\n)*?&gt;~=
&quot; se/htm2iso.se | &quot;~\n[ \t\n]*~=(10)&quot; &quot;~ +~= &quot;')</span><span
style='font-size:10.0pt;font-family:"Courier New"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>data = Data_Extractor (</span><span style='font-size:10.0pt;
mso-bidi-font-size:8.0pt;font-family:"Courier New"'>Tag_Stripper (</span><span
style='font-size:10.0pt;font-family:"Courier New"'>htm_page.read ()))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>htm_page.close ()<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><span style="mso-spacerun:
yes">      </span>return data<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; print
get_stock_quotes (('GE','IBM','AAPL', 'MSFT', 'AA', 'MER'))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>GE 3:17PM ET 33.15 0.30
0.90%<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>IBM 3:17PM ET 76.20 0.47
0.61%<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>AAPL 3:22PM ET 55.66 0.66
1.20%<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>MSFT 3:22PM ET 23.13 0.37
1.57%<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>AA 3:17PM ET 31.80 1.61
4.82%<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>MER 3:17PM ET 70.24 0.82
1.15%<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Here’s how to hack it: 1. Get an
htm source for some symbol.<span style="mso-spacerun: yes">  </span>2. Run it
through the Tag Stripper and see if you can define a regular expression that
matches all of your data. <i>keep</i> does that in this case. If it is not
possible, try again with the unstripped data which puts more locating features
at your disposal. Depending on which, you strip the tags first or last. In
either case, you have a two-pass run. This example does two passes with two
nested single-pass <i>Editors.</i></p>

<p class=MsoNormal style='line-height:110%'><i><span style="mso-spacerun:
yes">      </span>keep </i>has two definitions. The first one catches listings
after trading hours. Those have the name of the week day follow the symbol. The
regex targets their initials. When the function was run some other time and
returned nothing, the reason turned out to be that during trading hours they
show a different format: the symbol is followed by the time of the day. So
another regex was added to catch that format. Both formats could certainly be
put into one regex, with a certain speed benefit even. The point to retain is
that a single regex that has to do ‘everything’ gets conceptually intractable
at some point towards universality. <i>SE</i> encourages building up
functionality incrementally by assembling one by one regexes that are simple to
conceive and to test.<span style="mso-spacerun: yes">  </span></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>The last definition of the <i>Tag_Stripper (‘... “~ +~= “’)</i><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'> </span>would
make a CSV file, if the substitute is a suitable CSV separator (comma, tab,
...) instead of a space <i>(‘... “~ +~=,“’)</i> or <i>(‘... “~ +~=(9)“’)<o:p></o:p></i></p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun: yes"> 
</span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>&gt;&gt;&gt; </span><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>Tag_Stripper
= SEL.SEL ('&quot;~&lt;(.|\n)*?&gt;~= &quot; se/htm2iso.se | &quot;~\n[
\t\n]*~=(10)&quot; &quot;~ +~=,&quot;') </span><span style='font-size:10.0pt;
font-family:"Courier New"'># comma<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>GE,3:20PM
ET,33.6115,0.0885,0.26%<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>IBM,3:20PM
ET,78.41,0.42,0.54%<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:110%'><span
style='font-size:10.0pt;font-family:"Courier New"'>AAPL,3:25PM,
ET,58.50,1.03,1.79%<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_8_5_"></a><span
style='font-size:15.0pt'>8.5. Two-Step Conversions through a Generic Format<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Working with several sets of
symbols all of which identify the same set of items one would like to be able
to translate each set into and out of each other one. The number of translators
required is a factorial function of the number of sets. In other words, past
three sets the number of one-to-one correspondences quickly grows to overwhelming
magnitude. If on the other hand one translates each set into and out of the
same generic set, that generic set can connect each set with each other one.
The number of translators required now grows in proportion to the number of
sets. The follwing example elaborates the technique on stock symbols.</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
symbol_to_isin = 'se/symbol_to_generic.se (32)=(10) | se/generic_to_isin.se'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Symbol_To_Isin = SE.SE (symbol_to_isin)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
print Symbol_To_Isin ('ABX ADS MMM')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>CA0679011084<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>DE0005003404<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>US88579Y1010<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
symbol_to_name = se/symbol_to_generic.se | se/generic_to_name.se (32)=(10)'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Symbol_To_Name = SE.SE (symbol_to_name)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
print Symbol_To_Name ('ABX ADS MMM')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>Barrick
Gold<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>Adidas<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>3M
Company<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
symbol_to_cusip = 'se/symbol_to_generic.se | se/generic_to_cusip.se (32)=(10)'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Symbol_To_Cusip = SE.SE (symbol_to_cusip)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
print Symbol_To_Cusip ('ABX ADS MMM')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>ABX<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>ADIDAS<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>88579Y101<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>A second benefit of having a
generic format has to do with the fact that standard sets in reality never coincide
exactly, either because some items simply are undefined in some sets or some of
our lists are incomplete (the rule). Ids also change on us occasionally. If we
design our own generic ids, we can make it a superset of all real sets and we
can be sure it stays put. If some standard set adds or changes an id, we need
to update two files: into and out of the generic set. A system of direct
translations would gradually decay because its maintenance is prohibitive.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Making the point: The last example, <i>symbol to cusip,</i>
shows a need for system maintenance and it also shows what needs to be done. <i>Barrick
Gold (ABX)</i> is missing in <i>symbol_to_generic.se,</i> because the symbol
remains unchanged. <i>Adidas (ADS)</i> is missing in <i>generic_to_cusip.se,</i>
because it got as far as generic but no further. We make a note to add <i>Barrick
Gold</i> to <i>symbol_to_generic</i> and <i>Adidas</i> to <i>generic_to_cusip.</i>
That's all we need to do to keep the entire system coherent.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>If a conversion is called for which we have never done
before, writing the new translator is a matter of thirty seconds:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoBodyTextIndent style='line-height:130%'><span style='mso-bidi-font-size:
8.0pt'>$ echo &quot;se/cusip_to_generic.se | se/generic_to_name.se&quot; &gt;
se/cusip_to_name.se<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'>Revisiting <a href="#X_3_3_">3.3.</a>
Merging Sets:</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Ids_To_Symbol = SE.SE ('finance/se/cusip2symbol.se<span style="mso-spacerun:
yes">  </span>finance/se/isin2symbol.se<span style="mso-spacerun: yes"> 
</span>finance/se/sec2symbol.se<span style="mso-spacerun: yes"> 
</span>finance/se/valor2symbols.se')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>With a two-step system the
preceding line would call five runs in succession. We get by with two runs if
we do all formats to generic first and next generic to symbols, like this:</p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
Ids_To_Symbol = SE.SE ('cusip2generic.se isin2generic.se sec2generic.se
valor2generics.se | generic2symbol.se')</span><a name="X_8_6_"></a><span
style='font-size:15.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:15.0pt'>8.6.
A Day in the Life of a Stenographer<o:p></o:p></span></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>$
cat board/drafts/minutes-Apr-1-05<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>...
WW's motn to complement t MP w t discretionry suspensn of ...<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
SE.SE ('se/steno_expander.se')('board/drafts/minutes-Apr-1-05', '')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&quot;...
Chairman Walter Whiteknuckle's motion to complement the Motivation Plan with
the discretionary suspension of overweight employees' elevator privilege is
applauded, but Mr. Patrick Ficklepenney (Finance) points out that the
motivational effect, while predictably excellent at the Manhattan office, might
prove negligible at most field offices, the majority of which don't have a
second floor and of these none has an elevator. Dr. Yves-Jerome P.
Harcourt-DeVries Jr. (Legal) calls attention to the practical difficulty of
acquiring personal weight data by legal means. Mr. Patrick Ficklepenney
(Finance): What's wrong with illegal means? Mr. Hanshorst Schloumeier
(Engineering): I'd say it isn't any easier to get. Anyway I suspect zat ze real
difficulty is ze Legal Department's location in Manhattan ...&quot;<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
cut_embarrassing_stuff = '&quot;Mr. Patrick Ficklepenney (Finance): What's
wrong with illegal means? =&quot;<span style="mso-spacerun: yes"> 
</span>&quot;I'd say it isn\'t any easier to get. Anyway =&quot;'<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
cut_the_ bs = ' &quot; zat = that &quot; &quot; ze = the &quot; '<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'>&gt;&gt;&gt;
SE.SE ('se/steno_expander.se | ' + cut_embarrassing_stuff +
cut_the_bs)('board/drafts/minutes-Apr-1-05', 'board/minutes-Apr-1-05')<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:9.0pt;line-height:130%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><span
style="mso-spacerun: yes">   </span>'board/minutes-Apr-1-05'<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;mso-bidi-font-size:13.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal>This example concludes this doc hopefully in an entertaining
manner. While the <i>steno_expander</i> is plausible to some degree, the second
pass would be quite an absurd alternative to cleaning up the text going through
it, a task which a proof reader has to do anyway. </p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>Without much practical merit the example may nevertheless
inspire the insight that not all data processing tasks require rigorous
performance. Editing a text is precisely one example of fault tolerance. Here,
the objective is to save much time on repetitive interaction, not the little
time it takes a proof reader to smooth out a few rough spots. </p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><a name="X_9_"></a><span
style='font-size:18.0pt'>9. Closing Remarks<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'><span style='font-size:18.0pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='line-height:110%'>The unsurpassable functional
simplicity of a stream editor is probably the reason why stream-editing isn’t considered
a data processing technique in its own right. As a rule data is more than just
a stream. It usually has structure the meaning of which a stream editor utterly
disregards. On the other hand the conceptual simplicity of stream editing
promises a corresponding simplicity of use.</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span><i>SE</i> is an experiment attempting to make this simplicity
of use available. The benefit comes at the price of placing the responsibility
for handling context appropriately with the user. Fortunately, the simplicity
of the paradigm reflects on conceptualizing its use. Fortunately again, <i>SE</i>
addresses programmers who handle context as part of their job. In addition <i>SE</i>
offers all the help it can in terms of system transparency. (<a href="#X_4_">4,</a>
<a href="#X_5_">5</a>)</p>

<p class=MsoNormal style='line-height:110%'><span style="mso-spacerun:
yes">      </span>A second design goal in favor of the user was modularity. It
was achieved by keeping all programming-language-specific constructs out of the
interface, sticking with the simplest format possible: single strings. (<a
href="#X_2_2_">2.2</a>). Making file names stand for file contents moreover
creates an extremely flexible, recursively expandable building-block system
with respect to substitution definitions. (<a href="#X_3_2_">3.2.</a>) and with
respect to data files it allows nestable calls. (<a href="#X_7_3_2_A">7.3.1</a>.
<a href="#X_3_6_2_">3.6.2</a>)</p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal align=center style='text-align:center;line-height:110%'>Frederic
Rentsch</p>

<p class=MsoNormal align=center style='text-align:center;line-height:110%'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal align=center style='text-align:center;line-height:110%'>October
13, 2006</p>

<p class=MsoNormal align=center style='text-align:center;line-height:110%'><span
style='font-size:10.0pt;mso-bidi-font-size:8.0pt;font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>
